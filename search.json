[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/data-preparation.html","id":"prepare-microdataseed-population","dir":"Articles","previous_headings":"","what":"Prepare microdata/seed population","title":"Data Preparation","text":"Microdata data unit record file provides detailed information people, households, businesses types records - Source: 1406.0.55.003 - Responsible Use ABS Microdata, User Guide (https://www.abs.gov.au/ausstats/abs@.nsf/mf/1406.0.55.003) Go https://www.abs.gov.au/websitedbs/D3310114.nsf/home/MicrodataDownload Click ‘Log ’ button just right sidebar, shown screenshot .  successfully log , find entry title ‘Census Population Household, 2016’ proceed download CSV version microdata. picture , yellow button first row.  Save file location can easily find, better yet, Rproj folder, extract file. folder contain 3 files.","code":""},{"path":"/articles/data-preparation.html","id":"prepare-control-tables","dir":"Articles","previous_headings":"","what":"Prepare control tables","title":"Data Preparation","text":"Control total data tabulated format. ABS provides several datasets data portals, one ABS Census TableBuilder. TableBuilder web interface allows users create cross-tabulations census survey data different aggregations, across different geographical boundaries, categories. Check university librarian see university subscribed service. steps create download control total table TableBuilder: Go https://auth.censusdata.abs.gov.au/webapi/jsf/login.xhtml log valid credential.  Read conditions use click ‘Accept conditions use’ agree. Navigate ‘Catalogue’ -> ‘2016 Census Population Housing’ -> ‘Census TableBuilder Pro’.  Create person control totals using 2016 Census data. Double-click ‘2016 Census - Counting Persons, Place Usual Residence (MB)’. side bar menu need first select geographical area create population . Open (click tick mark entry) ‘Geographical Area (Usual Residence)’ -> ‘Geographical Areas Mesh Block (MBs)’ -> ‘MB Main Statistical Area Structure (MAIN ASGS) (UR)’ -> ‘New South Wales’ -> ‘Sydney - Eastern Suburbs’ -> ‘Eastern Suburbs - South’ -> ‘Randwick North’. Tick box ‘Randwick North’ add table ‘Wafer’.  Click ‘c’ button grey color line ‘x SA2 (UR)’, clicked turn blue area name replaced area code. important population synthesiser sample records microdata matches area code control total create step. Use sidebar select entries ‘SEXP sex’. Navigate ‘Selected Person Characteristic’ -> ‘SEXP Sex’ -> tick ‘Male’ ‘Female’ entries. add table rows clicking ‘Row’ button. ‘MSTP marital status’. Make sure tick categories add rows. done everything correctly point table look like one .  Look top right screen select ‘CSV String Value’ ‘Download Table’ drop option, click ‘Go’ download table CSV file.  Remove ‘SEXP’ ‘MSTP’ table dragging headers ‘Trash’ icon.  Create another table ‘Occp Occupation’ . Navigate ‘Employment, Income Unpaid Work’ -> ‘OCCP Occupation’ select 11 entries first level add table rows download .  reach point, now two person control tables. Let’s proceed create download another household control table. Click ‘Datasets’ go back main menu select new dataset. Select ‘Catalogue’-> ‘2016 Census Population Housing’ -> ‘Census TableBuilder Pro’ -> ‘2016 Census - Counting Dwellings, Place Enumeration (MB)’.  Select geographical area. Open ‘Geographical Area (Enumeration)’ -> ‘Geographical Areas Mesh Block (MBs)’ -> ‘MB Main Statistical Area Structure (MAIN ASGS) (UR)’ -> ‘New South Wales’ -> ‘Sydney - Eastern Suburbs’ -> ‘Eastern Suburbs - South’ -> ‘Randwick North’. Tick box ‘Randwick North’ add table ‘Wafer’. Also make sure area name switched area code  ‘Selected Dwelling Household Characteristics’ -> ‘NPRD Number Person Usually Resident Dwelling’. Tick entires except ‘Seven persons’ ‘Eight persons’. reason microdata just downloaded doesn’t households larger 6 usual residents avoid people indentified data. ways retify beyond goal example, provide simple example.  Download table ‘CSV String Value’ file.","code":""},{"path":"/articles/data-preparation.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"Data Preparation","text":"Now microdata control tables, can proceed next step, create synthetic population. Please proceed vignette(\"get-started\") vignette.","code":""},{"path":"/articles/get-started.html","id":"before-we-get-started","dir":"Articles","previous_headings":"","what":"Before we get started!","title":"Get Started","text":"following example, using R packages wasn’t shipped R program, provide useful functions transforming visualising data. make sure installed following packages using install.packages(\"<packge-name>\"). dplyr summarising data data.frame. sf working spatial data. mapview plotting spatial data. course need package, PopulationSynthesiser well. However, installing bit different package yet officially CRAN. Please follow ‘Installation’ section README page install package.","code":""},{"path":"/articles/get-started.html","id":"loading-the-datasets-into-r","dir":"Articles","previous_headings":"","what":"Loading the datasets into R","title":"Get Started","text":"now 2 person control tables, 1 household control table, 1 microdata. Let’s import R. can use functions read R. Notice , read_census_microdata() state census_year microdata names columns like select select. census_year helps package correctly identify geographical boundary variables microdata. select optional, stated can help reduce time takes import microdata. datasets just loaded R. Note , printing microdata ABS microdata never shared raw form1.","code":"library(PopulationSynthesiser) microdata <-   read_census_microdata(     person_file = \"datasets/Census2016_CSV/BCSF16_person_new.csv\",     family_file = \"datasets/Census2016_CSV/BCSF16_family.csv\",     dwelling_file = \"datasets/Census2016_CSV/BCSF16_dwelling.csv\",     census_year = \"2016\",     select = c(\"regucp\", \"agep\", \"mstp\", \"sexp\", \"nprd\", \"occp\", \"rlhp\")   ) %>%   create_fitting_sample()  person_control_1 <-   read_census_tablebuilder(\"datasets/person_control_1.csv\") %>%   create_fitting_control()  person_control_2 <-   read_census_tablebuilder(\"datasets/person_control_2.csv\") %>%   create_fitting_control()  household_control_1 <-   read_census_tablebuilder(\"datasets/household_control_1.csv\") %>%   create_fitting_control() library(dplyr)  microdata %>%   dplyr::mutate_if(is.character, as.factor) %>%   summary()  #>      abshid          absfid           abspid                agep        #>  Min.   :    1   Min.   :     1   Min.   :     1   30-34 years: 16781   #>  1st Qu.:23964   1st Qu.: 25630   1st Qu.: 58881   25-29 years: 16488   #>  Median :47087   Median : 50352   Median :117651   40-44 years: 15868   #>  Mean   :47324   Mean   : 50629   Mean   :117686   45-49 years: 15692   #>  3rd Qu.:70473   3rd Qu.: 75529   3rd Qu.:176656   35-39 years: 15378   #>  Max.   :94988   Max.   :101523   Max.   :235408   50-54 years: 15173   #>                                                    (Other)    :136873   #>              mstp                                           occp        #>  Divorced      :16489   Not applicable                        :125813   #>  Married       :91167   Professionals                         : 23665   #>  Never married :65731   Clerical and Administrative Workers   : 14522   #>  Not applicable:43016   Technicians and Trades Workers        : 14461   #>  Separated     : 6170   Managers                              : 13754   #>  Widowed       : 9680   Community and Personal Service Workers: 11651   #>                         (Other)                               : 28387   #>      regucp                            rlhp           sexp        #>  Min.   : 1.00   Husband, Wife or Partner:97510   Female:118040   #>  1st Qu.:14.00   Child under 15          :40180   Male  :114213   #>  Median :27.00   Non-family member       :27629                   #>  Mean   :27.38   Lone person             :20387                   #>  3rd Qu.:41.00   Non-dependent child     :13171                   #>  Max.   :57.00   Dependent student       :10794                   #>                  (Other)                 :22582                   #>              nprd       #>  Five persons  :27253   #>  Four persons  :51121   #>  Not applicable:20266   #>  One person    :21789   #>  Six persons   :17280   #>  Three persons :39003   #>  Two persons   :55541  head(person_control_1) #>          sa2 sexp           mstp count #> 1: 118021569 Male  Never married  3243 #> 2: 118021569 Male        Widowed   125 #> 3: 118021569 Male       Divorced   431 #> 4: 118021569 Male      Separated   159 #> 5: 118021569 Male        Married  2671 #> 6: 118021569 Male Not applicable  1337 head(person_control_2) #>          sa2                                   occp count #> 1: 118021569                               Managers  1618 #> 2: 118021569                          Professionals  3740 #> 3: 118021569         Technicians and Trades Workers   850 #> 4: 118021569 Community and Personal Service Workers   858 #> 5: 118021569    Clerical and Administrative Workers  1184 #> 6: 118021569                          Sales Workers   656 head(household_control_1) #>          sa2          nprd count #> 1: 118021569    One person  1861 #> 2: 118021569   Two persons  2538 #> 3: 118021569 Three persons  1139 #> 4: 118021569  Four persons   879 #> 5: 118021569  Five persons   252 #> 6: 118021569   Six persons    48"},{"path":"/articles/get-started.html","id":"synthesise-the-population","dir":"Articles","previous_headings":"","what":"Synthesise the population","title":"Get Started","text":"now going create fitting problems, one zone. help us sample records microdata geographically match control totals’ zones. example, microdata contains people four different zones shown image .  fitting problem zone (orange patch) one regions. case, fitting problem sample people region contains zone reference sample fitting problem.  solve fitting problem can use ml_fit() mlfit package. package provides 4 different multi-level fitting algorithms: entropy_o, dss, ipu, hipf. See ?mlfit::ml_fit learn algorithms. going use famous Iterative Proportion Updating algorithm (ipu) solve fitting problem. Although, algorithm reach convergence fitting problem, errors quite small. Priting fitting_result console provides useful results fitting problem. Now let’s replicate record reference sample fitted/calibrated weights. can use mlfit::ml_replicate() . Lookup ?mlfit::ml_replicate see definitions arguments. fitting problem 2639 rows reference sample. replicate , 16870 rows closely matched control totals, shown output dim(full_population).","code":"library(mlfit)  geo_hierarchy <- csf_geo2016()  head(geo_hierarchy) #>    regucp       sa2 #> 1:      1 101021007 #> 2:      1 101021008 #> 3:      1 101021009 #> 4:      1 101021010 #> 5:      1 101021011 #> 6:      1 101021012  fitting_problems <- ml_problem(   ref_sample = microdata,   field_names = special_field_names(     groupId = \"abshid\", individualId = \"abspid\", count = \"count\",     zone = \"sa2\", region = \"regucp\"   ),   group_controls = list(household_control_1),   individual_controls = list(person_control_1, person_control_2),   geo_hierarchy = geo_hierarchy ) #> Creating a list of fitting problems by zone  ml_problem <- fitting_problems[[\"118021569\"]] %>%   prefit_csf_agep_to_age5p() fitting_result <- mlfit::ml_fit(algorithm = \"ipu\", ml_problem) fitting_result #> An object of class ml_fit #>   Algorithm: ipu #>   Success: FALSE #>   Residuals (absolute): min = -0.02301994, max = 2.829837 #>   Flat problem: #>   An object of class flat_ml_fit_problem #>     Dimensions: 30 groups, 1192 target values #>     Model matrix type: separate #>     Original fitting problem: #>     An object of class ml_problem #>       Reference sample: 2639 observations #>       Control totals: 2 at individual, and 1 at group level #>       Zone: 118021569 full_population <-   ml_replicate(fitting_result, algorithm = \"trs\")  full_population %>%    dplyr::mutate_if(is.character, as.factor) %>%   summary() #>      abshid         absfid           abspid               agep      #>  Min.   :   1   Min.   :  1008   Min.   :    1   35-39 years:1945   #>  1st Qu.:1974   1st Qu.: 17458   1st Qu.: 4218   25-29 years:1693   #>  Median :3502   Median : 17734   Median : 8436   30-34 years:1393   #>  Mean   :3756   Mean   : 18132   Mean   : 8436   40-44 years:1191   #>  3rd Qu.:5568   3rd Qu.: 18090   3rd Qu.:12653   55-59 years:1189   #>  Max.   :7788   Max.   :100648   Max.   :16870   45-49 years:1184   #>                                                  (Other)    :8275   #>              mstp                                          occp      #>  Divorced      :1061   Not applicable                        :7273   #>  Married       :5314   Professionals                         :3730   #>  Never married :6853   Managers                              :1622   #>  Not applicable:2670   Clerical and Administrative Workers   :1184   #>  Separated     : 359   Community and Personal Service Workers: 856   #>  Widowed       : 613   Technicians and Trades Workers        : 852   #>                        (Other)                               :1353   #>      regucp                         rlhp          sexp      #>  Min.   :10   Husband, Wife or Partner:5898   Female:8886   #>  1st Qu.:10   Non-family member       :4450   Male  :7984   #>  Median :10   Lone person             :1848                 #>  Mean   :10   Child under 15          :1243                 #>  3rd Qu.:10   Non-dependent child     : 949                 #>  Max.   :10   Not applicable          : 738                 #>               (Other)                 :1744                 #>              nprd              age5p      #>  Five persons  :1126   35-39 years:1945   #>  Four persons  :2692   25-29 years:1693   #>  Not applicable:3452   20-24 years:1571   #>  One person    :2034   30-34 years:1393   #>  Six persons   : 266   40-44 years:1191   #>  Three persons :2767   55-59 years:1189   #>  Two persons   :4533   (Other)    :7888  nrow(full_population) #> [1] 16870  sum(person_control_1$count) #> [1] 16866"},{"path":"/articles/get-started.html","id":"post-processing","dir":"Articles","previous_headings":"","what":"Post processing","title":"Get Started","text":"","code":"full_population %>%   postfit_add_relationships() %>% # add ids of their partner, father, and mother to each individual   postfit_integerise_age5p() %>% # turn five-year age groups into single year   .[, .SD, .SDcols = patterns(\"_id$|^age$\")] %>%   # select only rows that have a partner, father, or mother using data.table syntax not equal to NA   .[!is.na(partner_id) | !is.na(father_id) | !is.na(mother_id)]  #> ℹ Checking inputs #> ℹ Creating relationship id fields: `partner_id`, `father_id`, `mother_id` #> ℹ Joining all members with other members (including self) in the same family household #> ℹ Adding relationships #> ℹ Cleaning up #> ✔ Done #>       partner_id father_id mother_id age #>    1:        284        NA        NA  53 #>    2:        283        NA        NA  46 #>    3:         NA       283       284  15 #>    4:         NA       283       284  12 #>    5:         NA       283       284  12 #>   ---                                    #> 7937:         NA        NA     16524   4 #> 7938:         NA        NA     16527   4 #> 7939:         NA        NA     16530   3 #> 7940:         NA        NA     16533   2 #> 7941:         NA        NA     16536   0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amarin Siripanich. Author, maintainer. Taha Rashidi. Author. Australian Urban Research Infrastructure Network (AURIN). Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Siripanich , Rashidi T (2023). PopulationSynthesiser: Synthetic Population Generator Australian Census Data. R package version 0.2.5, https://github.com/AURIN-OFFICE/RCITI_PopulationSynthesiser.","code":"@Manual{,   title = {PopulationSynthesiser: A Synthetic Population Generator for Australian Census Data},   author = {Amarin Siripanich and Taha Rashidi},   year = {2023},   note = {R package version 0.2.5},   url = {https://github.com/AURIN-OFFICE/RCITI_PopulationSynthesiser}, }"},{"path":"/index.html","id":"populationsynthesiser","dir":"","previous_headings":"","what":"A Synthetic Population Generator for Australian Census Data","title":"A Synthetic Population Generator for Australian Census Data","text":"package offers functions create synthetic populations using data Australian Bureau Statistics (ABS). utilises multi-level proportional fitting replication implementations mlfit. Key features ABS data include: Matching variables 1% Census Sample Files 2011 2016 ABS’s TableBuilder control tables. Linking parent-child relationships family members households. Generating population zone. Synthetic populations crucial inputs agent-based microsimulation models. generate synthetic population, reference sample population margins required. Calibrating reference sample match population margins using techniques Iterative Proportion Fitting integerising calibrated weights determine number clones required mimic real population.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Synthetic Population Generator for Australian Census Data","text":"can install released version PopulationSynthesiser GitHub : latest development version :","code":"# install.packages(\"remotes\") remotes::install_github(\"AURIN-OFFICE/PopulationSynthesiser\", ref = remotes::github_release()) remotes::install_github(\"AURIN-OFFICE/PopulationSynthesiser\")"},{"path":"/index.html","id":"why-synthesize-a-population","dir":"","previous_headings":"","what":"Why Synthesize a Population?","title":"A Synthetic Population Generator for Australian Census Data","text":"ideal world, data freely accessible without fear privacy violations. However, yet case, sensitive information unit record data census surveys often restricted public use. means researchers planners missing valuable information population unit record level, help solve pressing social issues employment, demographics, transportation. Population synthesis provides solution problem reconstructing full population data using sample data observed margins population. technique increasingly used microsimulation agent-based simulation, important tools travel demand forecasting studies. resulting synthetic population provides detailed information people households can support range applications.","code":""},{"path":"/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"A Synthetic Population Generator for Australian Census Data","text":"provide example use package generate synthetic population `Randwick - North’ region, New South Wales. example divided two parts: vignette(data-preparation) provides step--step instructions download microdata control tables ABS data portals. vignette(get-started) provides step--step instructions generate synthetic population using package.","code":""},{"path":[]},{"path":"/index.html","id":"installation-1","dir":"","previous_headings":"Developer notes","what":"Installation","title":"A Synthetic Population Generator for Australian Census Data","text":"project developed VSCode using Visual Studio Code Remote - Containers extension create reproducible development environment. easiest option clone repository use much loved RStudio IDE. However, fancy VSCode (like ) follow instruction . start developing: Install Visual Studio Code IDE (read , bet already machine ;)). Install Visual Studio Code Remote - Containers extension. Search ms-vscode-remote.remote-containers extensions tab. Bring VSCode command pallete typing ctrl+shift+p (Window Linux) cmd+shift+p (MacOS). Select Remote-Containers: Reopen Container. stage docker development container defined .devcontainer/Dockerfile .devcontainer/devcontainer.json built created VSCode terminal connected container.","code":""},{"path":"/reference/PopulationSynthesiser-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PopulationSynthesiser: A Synthetic Population Generator for Australian Census Data — PopulationSynthesiser-package","title":"PopulationSynthesiser: A Synthetic Population Generator for Australian Census Data — PopulationSynthesiser-package","text":"| packge contains implementations population synthesiser approaches utility functions using Australian census data.","code":""},{"path":[]},{"path":"/reference/PopulationSynthesiser-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PopulationSynthesiser: A Synthetic Population Generator for Australian Census Data — PopulationSynthesiser-package","text":"Maintainer: Amarin Siripanich .siripanich@unsw.edu.au (ORCID) Authors: Taha Rashidi rashidi@unsw.edu.au (ORCID) contributors: Australian Urban Research Infrastructure Network (AURIN) [funder]","code":""},{"path":"/reference/census_2011_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"ABS census 2011 data dictionary — census_2011_dictionary","title":"ABS census 2011 data dictionary — census_2011_dictionary","text":"ABS census 2011 data dictionary","code":""},{"path":"/reference/census_2011_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ABS census 2011 data dictionary — census_2011_dictionary","text":"","code":"census_2011_dictionary"},{"path":"/reference/census_2011_dictionary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ABS census 2011 data dictionary — census_2011_dictionary","text":"list data.frames: dwelling data description dwelling table family data description family table person data description person table areaenum data description place enumeration fields statistical_areas data description statistical area standard","code":""},{"path":"/reference/census_2016_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"ABS census 2016 data dictionary — census_2016_dictionary","title":"ABS census 2016 data dictionary — census_2016_dictionary","text":"ABS census 2016 data dictionary","code":""},{"path":"/reference/census_2016_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ABS census 2016 data dictionary — census_2016_dictionary","text":"","code":"census_2016_dictionary"},{"path":"/reference/census_2016_dictionary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ABS census 2016 data dictionary — census_2016_dictionary","text":"list data.frames: dwelling data description dwelling table family data description family table person data description person table place_of_usual_residence data description place usual residence fields place_of_enumeration data description place enumeration fields statistical_areas data description statistical area standard","code":""},{"path":"/reference/create_fitting_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a control table. — create_fitting_control","title":"Create a control table. — create_fitting_control","text":"Create control table.","code":""},{"path":"/reference/create_fitting_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a control table. — create_fitting_control","text":"","code":"create_fitting_control(control_table)"},{"path":"/reference/create_fitting_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a control table. — create_fitting_control","text":"control_table data.table::data.table().","code":""},{"path":"/reference/create_fitting_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a control table. — create_fitting_control","text":"data.table::data.table() format requires mlfit::ml_problem().","code":""},{"path":"/reference/create_fitting_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a reference sample — create_fitting_sample","title":"Create a reference sample — create_fitting_sample","text":"Create reference sample.","code":""},{"path":"/reference/create_fitting_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a reference sample — create_fitting_sample","text":"","code":"create_fitting_sample(microdata)"},{"path":"/reference/create_fitting_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a reference sample — create_fitting_sample","text":"microdata data.table::data.table().","code":""},{"path":"/reference/create_fitting_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a reference sample — create_fitting_sample","text":"data.table::data.table() format requires mlfit::ml_problem().","code":""},{"path":"/reference/csf_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a census Samlple File's zone table — csf_geo","title":"Create a census Samlple File's zone table — csf_geo","text":"creating geographical hierachy table mlfit::ml_problem().","code":""},{"path":"/reference/csf_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a census Samlple File's zone table — csf_geo","text":"","code":"csf_geo2016()  csf_geo2011()"},{"path":"/reference/load_abs_shp.html","id":null,"dir":"Reference","previous_headings":"","what":"Load ABS Shapefile — load_abs_shp","title":"Load ABS Shapefile — load_abs_shp","text":"function loads ABS shapefile URL. may use link help select ABS SHP file want read.","code":""},{"path":"/reference/load_abs_shp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load ABS Shapefile — load_abs_shp","text":"","code":"load_abs_shp(url, crs = 4326)"},{"path":"/reference/load_abs_shp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load ABS Shapefile — load_abs_shp","text":"url URL shapefile ABS website. crs numeric value represents spatial reference system shapefile. default EPGS \"4326\" representing \"WGS84\".","code":""},{"path":"/reference/load_abs_shp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load ABS Shapefile — load_abs_shp","text":"sf object.","code":""},{"path":"/reference/load_abs_shp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load ABS Shapefile — load_abs_shp","text":"","code":"url <- \"https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&1270055001_sa4_2016_aust_shape.zip&1270.0.55.001&Data%20Cubes&C65BC89E549D1CA3CA257FED0013E074&0&July%202016&12.07.2016&Latest\" load_abs_shp(url) #> Extracting the file to: /tmp/Rtmpjz7TMy/file1c4d7d787f24 #> Saved the downloaded file to: /tmp/Rtmpjz7TMy/file1c4dfdcfe0f #> Reading layer `SA4_2016_AUST' from data source  #>   `/tmp/Rtmpjz7TMy/file1c4d7d787f24/SA4_2016_AUST.shp' using driver `ESRI Shapefile' #> Simple feature collection with 107 features and 7 fields (with 18 geometries empty) #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 96.81694 ymin: -43.74051 xmax: 167.998 ymax: -9.142176 #> Geodetic CRS:  GDA94"},{"path":"/reference/make_recode_cvista.html","id":null,"dir":"Reference","previous_headings":"","what":"A factory function to create recode_cvista_*() — make_recode_cvista","title":"A factory function to create recode_cvista_*() — make_recode_cvista","text":"factory function create recode_cvista_*()","code":""},{"path":"/reference/make_recode_cvista.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A factory function to create recode_cvista_*() — make_recode_cvista","text":"","code":"make_recode_cvista(.fn, .cols, .new_col, ...)"},{"path":"/reference/make_recode_cvista.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A factory function to create recode_cvista_*() — make_recode_cvista","text":".fn function .cols columns use conversion .new_col name new column name ... dots","code":""},{"path":"/reference/morph_vista.html","id":null,"dir":"Reference","previous_headings":"","what":"Morph VISTA-population — morph_cvista","title":"Morph VISTA-population — morph_cvista","text":"function helps convert Census population VISTA-like population, refer CVISTA. reason call VISTA-like population many variables VISTA population exist recreated using variables Census. cases, need create new variable based set variables datasets, See Notes section 'Derived variables'. Hence, final population similar VISTA Census.","code":""},{"path":"/reference/morph_vista.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morph VISTA-population — morph_cvista","text":"","code":"morph_cvista(x, cvista_only = FALSE, extra_cols = NULL)"},{"path":"/reference/morph_vista.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morph VISTA-population — morph_cvista","text":"x VISTA Census population. cvista_only logical value. keep recoded columns TRUE. Also, columns 'cvista_' prefix renamed without prefix. extra_cols character vector. Names extra columns kept recodings done. exempted cvista_only. default, ID columns removed even cvista_only TRUE.","code":""},{"path":"/reference/morph_vista.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Morph VISTA-population — morph_cvista","text":"variables '_c' prefix mean new variables, meaning fully mapped variable VISTA. example, relationship variable VISTA can partially recreated variables CSF2016. See recode_cvista_relationship() details. Derived variables employment type fields data sets map well . Hence, need create new employment type variable aligns better Census population, since provides lower resolution.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/postfit_add_relationships.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relationship fields to a Census synthetic population — postfit_add_relationships","title":"Add relationship fields to a Census synthetic population — postfit_add_relationships","text":"Add partner_id, father_id, mother_id fields synthetic population based rlhp (relationship household) sexp (sex person) fields.","code":""},{"path":"/reference/postfit_add_relationships.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relationship fields to a Census synthetic population — postfit_add_relationships","text":"","code":"postfit_add_relationships(x)"},{"path":"/reference/postfit_add_relationships.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relationship fields to a Census synthetic population — postfit_add_relationships","text":"x data.table containing records Census synthetic population.","code":""},{"path":"/reference/postfit_add_relationships.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add relationship fields to a Census synthetic population — postfit_add_relationships","text":"data.table","code":""},{"path":"/reference/postfit_integerise_age5p.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn 5 year age group into a singly year — postfit_integerise_age5p","title":"Turn 5 year age group into a singly year — postfit_integerise_age5p","text":"Turn 5 year age group singly year","code":""},{"path":"/reference/postfit_integerise_age5p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn 5 year age group into a singly year — postfit_integerise_age5p","text":"","code":"postfit_integerise_age5p(x)"},{"path":"/reference/postfit_integerise_age5p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn 5 year age group into a singly year — postfit_integerise_age5p","text":"x data.table.","code":""},{"path":"/reference/postfit_integerise_age5p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn 5 year age group into a singly year — postfit_integerise_age5p","text":"data.table new age field.","code":""},{"path":"/reference/prefit_control_retotal.html","id":null,"dir":"Reference","previous_headings":"","what":"Retotal a control table using a new grand total. — prefit_control_retotal","title":"Retotal a control table using a new grand total. — prefit_control_retotal","text":"useful want simply project control table future year new grand total assumed distribution control remains unchanged.","code":""},{"path":"/reference/prefit_control_retotal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retotal a control table using a new grand total. — prefit_control_retotal","text":"","code":"prefit_control_retotal(   fitting_problem,   individual_total = NULL,   group_total = NULL,   round = TRUE )"},{"path":"/reference/prefit_control_retotal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retotal a control table using a new grand total. — prefit_control_retotal","text":"fitting_problem mlfit::ml_problem() object. individual_total new grand total person control tables. group_total new grand total group control tables. round logical value whether round new totals. Default TRUE.","code":""},{"path":"/reference/prefit_control_retotal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retotal a control table using a new grand total. — prefit_control_retotal","text":"new control table grand total equals total proportion cell remains original control table.","code":""},{"path":"/reference/prefit_csf_agep_to_age5p.html","id":null,"dir":"Reference","previous_headings":"","what":"Recategorise Census Sample File's Age of Person to five-year age group — prefit_csf_agep_to_age5p","title":"Recategorise Census Sample File's Age of Person to five-year age group — prefit_csf_agep_to_age5p","text":"Turn agep age5p (five-year age groups).","code":""},{"path":"/reference/prefit_csf_agep_to_age5p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recategorise Census Sample File's Age of Person to five-year age group — prefit_csf_agep_to_age5p","text":"","code":"prefit_csf_agep_to_age5p(fitting_problem)"},{"path":"/reference/prefit_csf_agep_to_age5p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recategorise Census Sample File's Age of Person to five-year age group — prefit_csf_agep_to_age5p","text":"fitting_problem mlfit::ml_problem() object.","code":""},{"path":"/reference/prefit_csf_agep_to_age5p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recategorise Census Sample File's Age of Person to five-year age group — prefit_csf_agep_to_age5p","text":"updated mlfit::ml_problem() object","code":""},{"path":"/reference/read_census_microdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"function reads ABS Population Housing Microdata tidy format allows create fitting problem.","code":""},{"path":"/reference/read_census_microdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"","code":"read_census_microdata(   person_file,   family_file,   dwelling_file,   census_year = c(\"2011\", \"2016\"),   label = TRUE,   select = NULL,   include_overseas_visitors = FALSE )  csf_id_cols"},{"path":"/reference/read_census_microdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"object class character length 3.","code":""},{"path":"/reference/read_census_microdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"person_file character(1) path person microdata CSV file family_file character(1) path family microdata CSV file dwelling_file character(1) path dwelling microdata CSV file census_year character(1) denote census year input census microdata label logical(1) microdata labelled? default TRUE select character() vector column names keep. However, abshid, abspid absfid kept, regardless select. default, columns discarded. include_overseas_visitors logical(1), default FALSE. TRUE overseas visitors, \"RLHP\" equal \"Overseas visitors\", included.","code":""},{"path":"/reference/read_census_microdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"csf object, also data.table.","code":""},{"path":"/reference/read_census_microdata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read ABS Census of Population and Housing Microdata into a tidy format — read_census_microdata","text":"csf_id_cols: ID columns CSF 2011 2016","code":""},{"path":"/reference/read_census_tablebuilder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Census TableBuilder generated csv files — read_census_tablebuilder","title":"Read Census TableBuilder generated csv files — read_census_tablebuilder","text":"function can read Census TableBuilder generated csv files without users strip metadata files.","code":""},{"path":"/reference/read_census_tablebuilder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Census TableBuilder generated csv files — read_census_tablebuilder","text":"","code":"read_census_tablebuilder(x, remove_totals = TRUE, simplify_names = TRUE)"},{"path":"/reference/read_census_tablebuilder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Census TableBuilder generated csv files — read_census_tablebuilder","text":"x character(1) directory file read. remove_totals logical(1) Default TRUE. TRUE rows contains 'Total' removed. fields summation button selected Census TableBuilder contain rows 'Total' category. simplify_names logical(1) Default TRUE. keep abbrevatiated names, available, convert everything names comply R's variable name restriction, except everything lowercase.","code":""},{"path":"/reference/read_census_tablebuilder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Census TableBuilder generated csv files — read_census_tablebuilder","text":"data.table::data.table().","code":""},{"path":"/reference/read_census_tablebuilder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Census TableBuilder generated csv files — read_census_tablebuilder","text":"","code":"ctb_testdata_dir <-   system.file(\"testdata\", \"2016-aus-ur-agep.csv\",     package = \"PopulationSynthesiser\"   ) read_census_tablebuilder(ctb_testdata_dir) #> ℹ Reading data from: /home/runner/work/_temp/Library/PopulationSynthesiser/testdata/2016-aus-ur-agep.csv #> ℹ Removing rows with 'Total' #> ℹ Simplifying names #>                             counting             age10p   count #>  1: Persons Place of Usual Residence          0-9 years 2967424 #>  2: Persons Place of Usual Residence        10-19 years 2818783 #>  3: Persons Place of Usual Residence        20-29 years 3231395 #>  4: Persons Place of Usual Residence        30-39 years 3265528 #>  5: Persons Place of Usual Residence        40-49 years 3164712 #>  6: Persons Place of Usual Residence        50-59 years 2977884 #>  7: Persons Place of Usual Residence        60-69 years 2488397 #>  8: Persons Place of Usual Residence        70-79 years 1540372 #>  9: Persons Place of Usual Residence        80-89 years  769511 #> 10: Persons Place of Usual Residence        90-99 years  174314 #> 11: Persons Place of Usual Residence 100 years and over    3565"},{"path":"/reference/recode_cvista_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA age — recode_cvista_age","title":"Create CVISTA age — recode_cvista_age","text":"VISTA1218's age variable \"age person\" can recreated CSF2016's agep (age person).","code":""},{"path":"/reference/recode_cvista_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA age — recode_cvista_age","text":"","code":"recode_cvista_age(x, ...)  # S3 method for csf2016 recode_cvista_age(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_age(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA age — recode_cvista_age","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_age5.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA five-year age group (derived variable) — recode_cvista_age5","title":"Create CVISTA five-year age group (derived variable) — recode_cvista_age5","text":"Create five-year age group variable using VISTA1218's age (age person) CSF2016's agep (age person)","code":""},{"path":"/reference/recode_cvista_age5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA five-year age group (derived variable) — recode_cvista_age5","text":"","code":"recode_cvista_age5(x, ...)  # S3 method for csf2016 recode_cvista_age5(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_age5(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_age5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA five-year age group (derived variable) — recode_cvista_age5","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_anzsco1.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA occupation field — recode_cvista_anzsco1","title":"Create CVISTA occupation field — recode_cvista_anzsco1","text":"CSF2016's OCCP variable can directly converted VISTA1218's ANZSCO1.","code":""},{"path":"/reference/recode_cvista_anzsco1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA occupation field — recode_cvista_anzsco1","text":"","code":"recode_cvista_anzsco1(x, ...)  # S3 method for csf2016 recode_cvista_anzsco1(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_anzsco1(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_anzsco1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA occupation field — recode_cvista_anzsco1","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_anzsic1.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA industry of work field — recode_cvista_anzsic1","title":"Create CVISTA industry of work field — recode_cvista_anzsic1","text":"CSF2016's INDP variable can directly converted VISTA1218's ANZSIC1.","code":""},{"path":"/reference/recode_cvista_anzsic1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA industry of work field — recode_cvista_anzsic1","text":"","code":"recode_cvista_anzsic1(x, ...)  # S3 method for csf2016 recode_cvista_anzsic1(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_anzsic1(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_anzsic1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA industry of work field — recode_cvista_anzsic1","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_cars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA cars (partial match) — recode_cvista_cars","title":"Create CVISTA cars (partial match) — recode_cvista_cars","text":"VISTA1218's CARS variable \"Number cars\" can partially recreated CSF2016's vehrd (number vehicles).","code":""},{"path":"/reference/recode_cvista_cars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA cars (partial match) — recode_cvista_cars","text":"","code":"recode_cvista_cars(x, ...)  # S3 method for csf2016 recode_cvista_cars(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_cars(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_cars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA cars (partial match) — recode_cvista_cars","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_dwelltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA dwelltype — recode_cvista_dwelltype","title":"Create CVISTA dwelltype — recode_cvista_dwelltype","text":"VISTA1218's DWELLTYPE variable \"Dwelling type\" can recreated CSF2016's strd (Dwelling Structure).","code":""},{"path":"/reference/recode_cvista_dwelltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA dwelltype — recode_cvista_dwelltype","text":"","code":"recode_cvista_dwelltype(x, ...)  # S3 method for csf2016 recode_cvista_dwelltype(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_dwelltype(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_dwelltype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA dwelltype — recode_cvista_dwelltype","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_emptype.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA employment type — recode_cvista_emptype","title":"Create CVISTA employment type — recode_cvista_emptype","text":"VISTA1218's EMPTYPE variable employment type can recreated CSF2016's SIEMP (Status Employment).","code":""},{"path":"/reference/recode_cvista_emptype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA employment type — recode_cvista_emptype","text":"","code":"recode_cvista_emptype(x, ...)  # S3 method for csf2016 recode_cvista_emptype(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_emptype(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_emptype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA employment type — recode_cvista_emptype","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_emptype.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create CVISTA employment type — recode_cvista_emptype","text":"SIEMP 'Owner stated employee', assumed 'Employer'.","code":""},{"path":"/reference/recode_cvista_hhinc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA hhinc (derived variable) — recode_cvista_hhinc","title":"Create CVISTA hhinc (derived variable) — recode_cvista_hhinc","text":"VISTA1218's HHINC variable \"Household income\" can used recreate CSF2016's rlhp (Relatioship household) rpip (Family/Household Reference Person Indicator).","code":""},{"path":"/reference/recode_cvista_hhinc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA hhinc (derived variable) — recode_cvista_hhinc","text":"","code":"recode_cvista_hhinc(x, ...)  # S3 method for csf2016 recode_cvista_hhinc(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_hhinc(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_hhinc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA hhinc (derived variable) — recode_cvista_hhinc","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_hhinc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create CVISTA hhinc (derived variable) — recode_cvista_hhinc","text":"\"Negative income\" CSF2016 recoded \"Nil income\" hhinc VISTA1218 contain negative income.","code":""},{"path":"/reference/recode_cvista_hhtype.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA household type (hhtype_c) — recode_cvista_hhtype","title":"Create CVISTA household type (hhtype_c) — recode_cvista_hhtype","text":"simplified household type can created VISTA1218's RELATIONSHIP variable \"Relationship Person 1\" CSF2016's rlhp (Relatioship household) rpip (Family/Household Reference Person Indicator).","code":""},{"path":"/reference/recode_cvista_hhtype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA household type (hhtype_c) — recode_cvista_hhtype","text":"","code":"recode_cvista_hhtype(x, ...)  # S3 method for csf2016 recode_cvista_hhtype(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_hhtype(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_hhtype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA household type (hhtype_c) — recode_cvista_hhtype","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_owndwell.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA owndwell (partial match) — recode_cvista_owndwell","title":"Create CVISTA owndwell (partial match) — recode_cvista_owndwell","text":"VISTA1218's OWNDWELL variable \"Dwelling ownership\" can recreated CSF2016's tend (Tenure Type).","code":""},{"path":"/reference/recode_cvista_owndwell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA owndwell (partial match) — recode_cvista_owndwell","text":"","code":"recode_cvista_owndwell(x, ...)  # S3 method for csf2016 recode_cvista_owndwell(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_owndwell(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_owndwell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA owndwell (partial match) — recode_cvista_owndwell","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_relationship.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA relationship (partial match) — recode_cvista_relationship","title":"Create CVISTA relationship (partial match) — recode_cvista_relationship","text":"VISTA1218's RELATIONSHIP variable \"Relationship Person 1\" can partially recreated CSF2016's rlhp (Relatioship household), rpip (Family/Household Reference Person Indicator), hhcd (household composition).","code":""},{"path":"/reference/recode_cvista_relationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA relationship (partial match) — recode_cvista_relationship","text":"","code":"recode_cvista_relationship(x, ...)  # S3 method for csf2016 recode_cvista_relationship(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_relationship(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_relationship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA relationship (partial match) — recode_cvista_relationship","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA sex — recode_cvista_sex","title":"Create CVISTA sex — recode_cvista_sex","text":"VISTA1218's sex variable \"Sex person\" can recreated CSF2016's sexp (Sex person).","code":""},{"path":"/reference/recode_cvista_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA sex — recode_cvista_sex","text":"","code":"recode_cvista_sex(x, ...)  # S3 method for csf2016 recode_cvista_sex(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_sex(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA sex — recode_cvista_sex","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_studying.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CVISTA studying — recode_cvista_studying","title":"Create CVISTA studying — recode_cvista_studying","text":"VISTA1218's STUDYING variable \"Student Status - level none?\" can recreated CSF2016's STUP (Full/Part Time Student Status) TYPP (Type Educational Institution Attending).","code":""},{"path":"/reference/recode_cvista_studying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CVISTA studying — recode_cvista_studying","text":"","code":"recode_cvista_studying(x, ...)  # S3 method for csf2016 recode_cvista_studying(x, remove_cols = FALSE, ...)  # S3 method for vista1218 recode_cvista_studying(x, remove_cols = FALSE, ...)"},{"path":"/reference/recode_cvista_studying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CVISTA studying — recode_cvista_studying","text":"x csf2016 data.table vista1218 data.table. ... dots remove_cols remove recoding columns","code":""},{"path":"/reference/recode_cvista_studying.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create CVISTA studying — recode_cvista_studying","text":"SIEMP 'Owner stated employee', assumed 'Employer'.","code":""},{"path":"/reference/run_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ATRC workflow — run_workflow","title":"Run the ATRC workflow — run_workflow","text":"workflow creates synthetic population reference sample control data specified input config file. fitting replicating algorithms can also selected config file.","code":""},{"path":"/reference/run_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ATRC workflow — run_workflow","text":"","code":"run_workflow(config_path = \"/atrc_data/parameters.yaml\")"},{"path":"/reference/run_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the ATRC workflow — run_workflow","text":"config_path path ATRC workflow config file. See expected format https://github.com/ATRC-AURIN/PopulationSynthesiser/blob/main/atrc_workflow/parameters.yaml.","code":""},{"path":"/reference/run_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the ATRC workflow — run_workflow","text":"list mlfit's fitted problem data.frame resulting synthetic population.","code":""},{"path":"/reference/vista1218web.html","id":null,"dir":"Reference","previous_headings":"","what":"A merged between the persons table and the households table of VISTA\n2012-2018, a public version. — vista1218web","title":"A merged between the persons table and the households table of VISTA\n2012-2018, a public version. — vista1218web","text":"merged persons table households table VISTA 2012-2018, public version.","code":""},{"path":"/reference/vista1218web.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A merged between the persons table and the households table of VISTA\n2012-2018, a public version. — vista1218web","text":"","code":"vista1218web"},{"path":"/reference/vista1218web.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A merged between the persons table and the households table of VISTA\n2012-2018, a public version. — vista1218web","text":"data frame 64516 rows 71 variables: Please see official data glossary downloding data source, linked .","code":""},{"path":"/reference/vista1218web.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A merged between the persons table and the households table of VISTA\n2012-2018, a public version. — vista1218web","text":"https://transport.vic.gov.au//data--research/vista/vista-data--publications","code":""},{"path":"/news/index.html","id":"populationsynthesiser-025-2023-03-01","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.5 (2023-03-01)","title":"PopulationSynthesiser 0.2.5 (2023-03-01)","text":"run_workflow()’s config, type parameter path value stored path, previosly stored value.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-024-2023-03-01","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.4 (2023-03-01)","title":"PopulationSynthesiser 0.2.4 (2023-03-01)","text":"config file run_workflow() now requires output directory file name generated synthetic population separate values.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-023-2023-02-27","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.3 (2023-02-27)","title":"PopulationSynthesiser 0.2.3 (2023-02-27)","text":"Internal updates.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0229001-2023-02-11","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.2.9001 (2023-02-11)","title":"PopulationSynthesiser 0.2.2.9001 (2023-02-11)","text":"Updated README. pkgdown documentation site now article section two vignettes data preparation get started. Install mlfit GitHub repo instead CRAN keep latest updates.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0229000-2023-02-02","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.2.9000 (2023-02-02)","title":"PopulationSynthesiser 0.2.2.9000 (2023-02-02)","text":"Update README. Fix failed tests.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-022-2022-03-30","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.2 (2022-03-30)","title":"PopulationSynthesiser 0.2.2 (2022-03-30)","text":"Use pak install package Docker build. Fixed #26.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-021-2022-03-20","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.1 (2022-03-20)","title":"PopulationSynthesiser 0.2.1 (2022-03-20)","text":"Upgrade Pkgdown’s Boostrap 5. Introduce ATRC workflow.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-020-2022-01-04","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.2.0 (2022-01-04)","title":"PopulationSynthesiser 0.2.0 (2022-01-04)","text":"Make census_2011_dictionary similar census_2016_dictionary. AGEP person table expanded column names across microdata tables identical two dictionaries. read_census_microdata() now assigns unique family person ids individuals CSF 2011. Removed FittingProblemGenerator, result can already achieved using mlfit::ml_problem(). Added postfit_add_relationships() (ATRC-73). Added prefit_csf_agep_to_age5p() recategorising CSF’s age person (agep) five-year age groups. Added postfit_integerise_age5p() disaggregating 5-year age groups single year age. Added prefit_control_retotal() redistributing new grand total control tables ml_problem object. scripts/run_example.R now reads control files match Regular expression patterns. file matches ‘persons-control.\\.csv’ used person control, ’households-control.\\.csv’ household control.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0119004-2021-08-16","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1.9004 (2021-08-16)","title":"PopulationSynthesiser 0.1.1.9004 (2021-08-16)","text":"Change Dockerfile run detech mode","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0119003-2021-08-16","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1.9003 (2021-08-16)","title":"PopulationSynthesiser 0.1.1.9003 (2021-08-16)","text":"Dockerfile now runs example script","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0119002-2021-08-16","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1.9002 (2021-08-16)","title":"PopulationSynthesiser 0.1.1.9002 (2021-08-16)","text":"package now uses CRAN version mlfit.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0119001-2021-08-10","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1.9001 (2021-08-10)","title":"PopulationSynthesiser 0.1.1.9001 (2021-08-10)","text":"Automate Docker image building uploading using GitHub Actions.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-0119000-2021-06-25","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1.9000 (2021-06-25)","title":"PopulationSynthesiser 0.1.1.9000 (2021-06-25)","text":"Add morph_cvista(), function creates Close enough VISTA population VISTA 2012-2018 Census CSF 2016 populations. requires creating input population ATRC activity generator. Bundle VISTA 2012-2018 public version package can accessed calling vista1218web. Use cli package printing pretty messages.","code":""},{"path":"/news/index.html","id":"populationsynthesiser-011-2021-06-17","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.1 (2021-06-17)","title":"PopulationSynthesiser 0.1.1 (2021-06-17)","text":"Replace MultiLevelIPF package mlfit package, package brand new name (ATRC-84). Replace deprecated fitting_problem() function ml_problem() (ATRC-83).","code":""},{"path":"/news/index.html","id":"populationsynthesiser-010-2021-04-01","dir":"Changelog","previous_headings":"","what":"PopulationSynthesiser 0.1.0 (2021-04-01)","title":"PopulationSynthesiser 0.1.0 (2021-04-01)","text":"Initial release.","code":""}]
